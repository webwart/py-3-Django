version: "3.8"

services:

  web:
    restart: always
    container_name: web_ecommercev2
    build:
      context: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - pgdb

  pgdb:
    container_name: pgdb_ecommercev2
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  elasticsearch:
    container_name: elasticsearch_ecommercev2
    image: elasticsearch:7.14.2
    environment:
      - cluster.name=ecommerce-elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms128m -Xmx128m
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    depends_on:
      - pgdb

  redis:
    container_name: redis
    restart: always
    image: redis:alpine
    ports:
      - "6379:6379"

  celery:
    container_name: celery_ecommercev2
    restart: always
    build:
      context: .
    command: celery -A ecommerce worker -l info
    environment:
      - DEBUG=1
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379:0
    depends_on:
      - redis
    volumes:
      - .:/usr/src/app/
  celery-beat:
    container_name: celery_beat_ecommerce
    restart: always
    build:
      context: .
    command: celery -A ecommerce beat -l info
    depends_on:
      - redis
      - celery
    volumes:
      - .:/usr/src/app/
  flower:
    container_name: flower_ecommerce
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=8888
    ports:
      - 8888:8888
